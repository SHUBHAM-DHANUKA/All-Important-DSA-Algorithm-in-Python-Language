class queen_target_finder:
  def row_and_column(self,i,j):
    for item in range(len(matrix)):
      print(i,item)
      print(item,j) 
  
  def addition(self, i ,j):
    if i < len(matrix) and j < len(matrix):
      print(i, j)
      i = i+1
      j = j+1
      self.addition(i,j)
  
  def subtractor(self,i,j):
    if i >= 0 and j >= 0:
      print(i,j)
      i = i-1
      j = j-1
      self.subtractor(i,j)
  
  def forward_reverse(self,i,j):
    if i >=0 and j< len(matrix):
      print(i,j)
      i = i-1
      j = j+1
      self.forward_reverse(i,j)
  
  def backward_reverse(self,i,j):
    if i < len(matrix) and j >=0:
      print(i ,j )
      i = i+1
      j = j-1
      self.backward_reverse(i,j)

def queen_target(i,j):
  qtf = queen_target_finder()
  qtf.row_and_column(i,j)
  qtf.addition(i,j)
  qtf.subtractor(i,j)
  qtf.forward_reverse(i,j)
  qtf.backward_reverse(i,j)

queen_target(1,2)
